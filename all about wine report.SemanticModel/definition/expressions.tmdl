expression FilePath = "D:\OneDrive - DataVizExpert\Data\Wine Tasting Dataset\" meta [IsParameterQuery=true, Type="Any", IsParameterQueryRequired=true]
	lineageTag: f2d0d453-47ea-41eb-afcb-83f068dfbbc2

	annotation PBI_ResultType = Text

	annotation PBI_NavigationStepName = Navigation

expression winemag-data-source-development =
		let
		  Source = Table.FirstN(
		    Csv.Document(
		    File.Contents(FullPath),
		    [Delimiter = ",", Columns = 14, Encoding = 65001, QuoteStyle = QuoteStyle.Csv]
		  ),
		  No_Of_Rows_To_Load + 1
		),
		  #"Promoted Headers" = Table.PromoteHeaders(Source, [PromoteAllScalars = true]),
		    #"Changed Type" = Table.TransformColumnTypes(
		    #"Promoted Headers",
		    {
		      {"id", Int64.Type},
		      {"country", type text},
		      {"description", type text},
		      {"designation", type text},
		      {"points", Int64.Type},
		      {"price", Int64.Type},
		      {"province", type text},
		      {"region_1", type text},
		      {"region_2", type text},
		      {"taster_name", type text},
		      {"taster_twitter_handle", type text},
		      {"title", type text},
		      {"variety", type text},
		      {"winery", type text}
		    }
		  ),
		  #"Replaced Blank Taster" = Table.ReplaceValue(
		    #"Changed Type",
		    "",
		    null,
		    Replacer.ReplaceValue,
		    {"taster_name"}
		  ),
		    #"Replaced Blank Variety" = Table.ReplaceValue(
		    #"Replaced Blank Taster",
		    "",
		    null,
		    Replacer.ReplaceValue,
		    {"variety"}
		  ),
		  #"Reordered Columns" = Table.ReorderColumns(
		    #"Replaced Blank Variety",
		    {
		      "id",
		      "country",
		      "description",
		      "designation",
		      "points",
		      "price",
		      "province",
		      "region_2",
		      "region_1",
		      "taster_name",
		      "taster_twitter_handle",
		      "title",
		      "variety",
		      "winery"
		    }
		  ),
		  #"Renamed Columns" = Table.RenameColumns(
		    #"Reordered Columns",
		    {{"region_2", "region"}, {"region_1", "area"}}
		  )
		in
		    #"Renamed Columns"
	lineageTag: 62b0993d-41e7-40a6-be6f-8880e10bc1b6
	queryGroup: 'Source Files'

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression FullPath = ```
		let
		    FullPath = FilePath & "winemag-data-130k-v2.csv"    
		in
		    FullPath
		```
	lineageTag: 9e7edf96-1c98-4365-9ae7-2f1a4ea9276b

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Text

expression my_wine_variety_dim =
		let
		    Source = Csv.Document(
		    File.Contents(FilePath & "wine variety colour (My Own Table).csv"),
		    [Delimiter = ",", Columns = 14, Encoding = 65001, QuoteStyle = QuoteStyle.Csv]
		  ),
		    #"Promoted Headers" = Table.PromoteHeaders(Source, [PromoteAllScalars=true])
		in
		    #"Promoted Headers"
	lineageTag: 5d82e1b0-d13d-43f5-83fe-b29d5377a6bf
	queryGroup: 'Source Files'

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression winemag-data-source-production =
		let
		    Source = Csv.Document(
		    File.Contents(FullPath),
		    [Delimiter = ",", Columns = 14, Encoding = 65001, QuoteStyle = QuoteStyle.Csv]
		  ),
		  #"Promoted Headers" = Table.PromoteHeaders(Source, [PromoteAllScalars = true]),
		    #"Changed Type" = Table.TransformColumnTypes(
		    #"Promoted Headers",
		    {
		      {"id", Int64.Type},
		      {"country", type text},
		      {"description", type text},
		      {"designation", type text},
		      {"points", Int64.Type},
		      {"price", Int64.Type},
		      {"province", type text},
		      {"region_1", type text},
		      {"region_2", type text},
		      {"taster_name", type text},
		      {"taster_twitter_handle", type text},
		      {"title", type text},
		      {"variety", type text},
		      {"winery", type text}
		    }
		  ),
		  #"Replaced Blank Taster" = Table.ReplaceValue(
		    #"Changed Type",
		    "",
		    null,
		    Replacer.ReplaceValue,
		    {"taster_name"}
		  ),
		    #"Replaced Blank Variety" = Table.ReplaceValue(
		    #"Replaced Blank Taster",
		    "",
		    null,
		    Replacer.ReplaceValue,
		    {"variety"}
		  ),
		  #"Reordered Columns" = Table.ReorderColumns(
		    #"Replaced Blank Variety",
		    {
		      "id",
		      "country",
		      "description",
		      "designation",
		      "points",
		      "price",
		      "province",
		      "region_2",
		      "region_1",
		      "taster_name",
		      "taster_twitter_handle",
		      "title",
		      "variety",
		      "winery"
		    }
		  ),
		  #"Renamed Columns" = Table.RenameColumns(
		    #"Reordered Columns",
		    {{"region_2", "region"}, {"region_1", "area"}}
		  )
		in
		    #"Renamed Columns"
	lineageTag: a78debb3-5370-4a38-8417-9d58ba986e95
	queryGroup: 'Source Files'

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression No_Of_Rows_To_Load = 250000 meta [IsParameterQuery=true, Type="Number", IsParameterQueryRequired=true]
	lineageTag: e34f3e26-17a5-4b31-a395-8ec52d3eea68

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Number

expression designation_dim =
		let
		  Source = #"winemag-data-source-development",
		  #"Removed Other Columns" = Table.SelectColumns(Source, {"designation"}),
		  #"Replaced Value" = Table.ReplaceValue(
		    #"Removed Other Columns",
		    "#NAME?",
		    "",
		    Replacer.ReplaceText,
		    {"designation"}
		  ),
		  #"Removed Duplicates" = Table.Distinct(#"Replaced Value"),
		  #"Sorted Rows" = Table.Sort(#"Removed Duplicates", {{"designation", Order.Ascending}}),
		  #"Filtered Rows" = Table.SelectRows(#"Sorted Rows", each ([designation] <> "")),
		  #"Added Index" = Table.AddIndexColumn(#"Filtered Rows", "Index", 1, 1, Int64.Type),
		  #"Renamed Columns" = Table.RenameColumns(#"Added Index", {{"Index", "designation_key"}})
		in
		  #"Renamed Columns"
	lineageTag: 914d2361-43ea-4e1b-95f0-725f413522ef
	queryGroup: dimensions

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression 'Taster Info' =
		let
		    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("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", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#"Taster Name" = _t, #"Image URL" = _t, Details = _t]),
		    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Taster Name", type text}, {"Image URL", type text}, {"Details", type text}})
		in
		    #"Changed Type"
	lineageTag: 11f2dd29-5e56-43df-a08c-f2874e0ee903

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

